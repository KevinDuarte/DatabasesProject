/*Relationship Tables*/

/*Relationship between director (SuperAdmin) and university*/
CREATE TABLE directs
(
directorID INTEGER,
universityID INTEGER,
PRIMARY KEY(directorID, universityID),
FOREIGN KEY(directorID) REFERENCES director(directorID),
FOREIGN KEY(universityID) REFERENCES university(universityID)
);

/*Relationship between university and rso*/
CREATE TABLE partOf
(
universityID INTEGER,
rsoID INTEGER,
PRIMARY KEY(universityID, rsoID),
FOREIGN KEY(universityID) REFERENCES university(universityID),
FOREIGN KEY(rsoID) REFERENCES rso(rsoID)
);

/*Relationship between admin and rso*/
CREATE TABLE manages
(
adminID INTEGER,
rsoID INTEGER,
PRIMARY KEY(adminID, rsoID),
FOREIGN KEY(adminID) REFERENCES admin(adminID),
FOREIGN KEY(rsoID) REFERENCES rso(rsoID)
);

/*Relationship between university and location*/
CREATE TABLE locatedAt
(
universityID INTEGER,
address varchar(100),
longitude FLOAT,
latitude FLOAT,
PRIMARY KEY(universityID, address),
FOREIGN KEY(universityID) REFERENCES university(universityID),
);

/*Relationship between event and location*/
CREATE TABLE heldAt
(
eventID INTEGER,
address varchar(100),
longitude FLOAT,
latitude FLOAT,
PRIMARY KEY(eventID, address),
FOREIGN KEY(eventID) REFERENCES event(eventID)
);

/*Relationship between university and event*/
CREATE TABLE hostedBy
(
universityID INTEGER,
eventID INTEGER,
PRIMARY KEY(universityID, eventID),
FOREIGN KEY(universityID) REFERENCES university(universityID),
FOREIGN KEY(eventID) REFERENCES event(eventID)
);

/*Relationship between rso and event*/
CREATE TABLE organizedBy
(
eventID INTEGER,
rsoID INTEGER,
PRIMARY KEY(eventID, rsoID),
FOREIGN KEY(eventID) REFERENCES event(eventID),
FOREIGN KEY(rsoID) REFERENCES rso(rsoID)
);

/*Relationship between student and rso*/
CREATE TABLE memberOf
(
studentID INTEGER,
rsoID INTEGER,
PRIMARY KEY(studentID, rsoID),
FOREIGN KEY(studentID) REFERENCES student(studentID),
FOREIGN KEY(rsoID) REFERENCES rso(rsoID)
);

/*Relationship between student and event*/
CREATE TABLE comments
(
studentID INTEGER,
eventID INTEGER,
comment varchar(500),
PRIMARY KEY(studentID, eventID),
FOREIGN KEY(studentID) REFERENCES student(studentID),
FOREIGN KEY(eventID) REFERENCES event(eventID)
);

/*Relationship between student and university*/
CREATE TABLE attends
(
studentID INTEGER,
universityID INTEGER,
PRIMARY KEY(studentID, universityID),
FOREIGN KEY(studentID) REFERENCES student(studentID),
FOREIGN KEY(universityID) REFERENCES university(universityID)
);







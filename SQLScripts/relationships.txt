/*Relationship Tables*/

/*Relationship between director (SuperAdmin) and university*/
CREATE TABLE managedby
(
directorID INTENGER,
universityID INTEGER,
PRIMARY KEY(directorID, universityID),
FORIEGN KEY(directorID) REFERENCES director(directorID),
FORIEGN KEY(universityID) REFERENCES university(universityID)
);

/*Relationship between university and rso*/
CREATE TABLE partof
(
universityID INTEGER,
rsoID INTEGER,
PRIMARY KEY(universityID, rsoID),
FORIEGN KEY(universityID) REFERENCES university(universityID),
FORIEGN KEY(rsoID) REFERENCES rso(rsoID)
);

/*Relationship between admin and rso*/
CREATE TABLE managed
(
adminID INTEGER,
rsoID INTEGER,
PRIMARY KEY(adminID, rsoID),
FORIEGN KEY(adminID) REFERENCES admin(adminID),
FORIEGN KEY(rsoID) REFERENCES rso(rsoID)
);

/*Relationship between university and location*/
CREATE TABLE locatedat
(
universityID INTEGER,
locationID INTEGER,
PRIMARY KEY(universityID, locationID),
FORIEGN KEY(universityID) REFERENCES university(universityID),
FORIEGN KEY(locationID) REFERENCES location(locationID)
);

/*Relationship between event and location*/
CREATE TABLE heldat
(
locationID INTEGER,
eventID INTEGER,
PRIMARY KEY(locationID, eventID),
FORIEGN KEY(eventID) REFERENCES event(eventID),
FORIEGN KEY(locationID) REFERENCES location(locationID)
);

/*Relationship between university and event*/
CREATE TABLE hostedby
(
universityID INTEGER,
eventID INTEGER,
PRIMARY KEY(universityID, eventID),
FORIEGN KEY(universityID) REFERENCES university(universityID),
FORIEGN KEY(eventID) REFERENCES event(eventID)
);

/*Relationship between rso and event*/
CREATE TABLE organizedby
(
eventID INTEGER,
rsoID INTEGER,
PRIMARY KEY(eventID, rsoID),
FORIEGN KEY(eventID) REFERENCES event(eventID),
FORIEGN KEY(rsoID) REFERENCES rso(rsoID)
);

/*Relationship between student and rso*/
CREATE TABLE memeberof
(
studentID INTEGER,
rsoID INTEGER,
PRIMARY KEY(studentID, rsoID),
FORIEGN KEY(studentID) REFERENCES student(studentID),
FORIEGN KEY(rsoID) REFERENCES rso(rsoID)
);

/*Relationship between student and event*/
CREATE TABLE comments
(
studentID INTEGER,
eventID INTEGER,
comment varchar(500),
PRIMARY KEY(studentID, eventID),
FORIEGN KEY(studentID) REFERENCES student(studentID),
FORIEGN KEY(eventID) REFERENCES event(eventID)
);

/*Relationship between student and university*/
CREATE TABLE attends
(
studentID INTEGER,
universityID INTEGER,
PRIMARY KEY(studentID, universityID),
FORIEGN KEY(studentID) REFERENCES student(studentID),
FORIEGN KEY(universityID) REFERENCES university(universityID)
);


